// <auto-generated />
using Courses.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Courses.Data.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20221021112556_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "InstructorsId");

                    b.HasIndex("InstructorsId");

                    b.ToTable("CourseInstructor");
                });

            modelBuilder.Entity("Courses.Data.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Course 1 description.",
                            Title = "Course 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Course 2 description.",
                            Title = "Course 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Course 3 description.",
                            Title = "Course 3"
                        });
                });

            modelBuilder.Entity("Courses.Data.Entities.CourseInstructor", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "InstructorId");

                    b.HasIndex("InstructorId");

                    b.ToTable("CourseInstructors");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            InstructorId = 1
                        },
                        new
                        {
                            CourseId = 1,
                            InstructorId = 2
                        },
                        new
                        {
                            CourseId = 2,
                            InstructorId = 2
                        },
                        new
                        {
                            CourseId = 3,
                            InstructorId = 1
                        });
                });

            modelBuilder.Entity("Courses.Data.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "John Doe's description.",
                            Name = "John Doe",
                            Thumbnail = "/images/john.png"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Jane Doe's description.",
                            Name = "Jane Doe",
                            Thumbnail = "/images/jane.png"
                        });
                });

            modelBuilder.Entity("Courses.Data.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Url")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Description = "Video 1 description",
                            Thumbnail = "Thumbnail 1 Url",
                            Title = "Video 1 Title",
                            Url = "https://www.youtube.com/embed/BJFyzpBcaCY"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Description = "Video 2 description",
                            Thumbnail = "Thumbnail 2 Url",
                            Title = "Video 2 Title",
                            Url = "https://www.youtube.com/embed/BJFyzpBcaCY"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            Description = "Video 3 description",
                            Thumbnail = "Thumbnail 3 Url",
                            Title = "Video 3 Title",
                            Url = "https://www.youtube.com/embed/BJFyzpBcaCY"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            Description = "Video 4 description",
                            Thumbnail = "Thumbnail 4 Url",
                            Title = "Video 4 Title",
                            Url = "https://www.youtube.com/embed/BJFyzpBcaCY"
                        });
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("Courses.Data.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Courses.Data.Entities.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Courses.Data.Entities.CourseInstructor", b =>
                {
                    b.HasOne("Courses.Data.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Courses.Data.Entities.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Courses.Data.Entities.Video", b =>
                {
                    b.HasOne("Courses.Data.Entities.Course", "Course")
                        .WithMany("Videos")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Courses.Data.Entities.Course", b =>
                {
                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
